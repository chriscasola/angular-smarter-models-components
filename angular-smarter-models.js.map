{"version":3,"sources":["module.ts","model-wrapper.ts","model-instance.ts","model.ts","model-list-item-instance.ts","model-error.ts","model-data-retriever.ts","model-factory.ts"],"names":["AngularSmarterModels","AngularSmarterModels.ModelInstance","AngularSmarterModels.ModelInstance.constructor","AngularSmarterModels.ModelInstance.props","AngularSmarterModels.ModelInstance.serialize","AngularSmarterModels.ModelInstance.merge","AngularSmarterModels.ModelInstance.setModelPath","AngularSmarterModels.ModelInstance.getModelPath","AngularSmarterModels.ModelInstance.save","AngularSmarterModels.ModelInstance.delete","AngularSmarterModels.Model","AngularSmarterModels.Model.constructor","AngularSmarterModels.Model.get","AngularSmarterModels.Model.getAsync","AngularSmarterModels.Model.list","AngularSmarterModels.Model.listAsync","AngularSmarterModels.Model.getMultipleAsync","AngularSmarterModels.Model.create","AngularSmarterModels.ModelListItemInstance","AngularSmarterModels.ModelListItemInstance.constructor","AngularSmarterModels.ModelListItemInstance.config","AngularSmarterModels.ModelListItemInstance.props","AngularSmarterModels.ModelError","AngularSmarterModels.ModelError.constructor","AngularSmarterModels.ModelError.props","AngularSmarterModels.ModelError.error","AngularSmarterModels.ModelError.time","AngularSmarterModels.ModelDataRetrieverError","AngularSmarterModels.ModelDataRetrieverError.constructor","AngularSmarterModels.UrlCache","AngularSmarterModels.UrlCache.constructor","AngularSmarterModels.UrlCache.has","AngularSmarterModels.UrlCache.get","AngularSmarterModels.UrlCache.set","AngularSmarterModels.UrlCache.stripTrailingSlash","AngularSmarterModels.buildUrl","AngularSmarterModels.ModelDataRetriever","AngularSmarterModels.ModelDataRetriever.constructor","AngularSmarterModels.ModelDataRetriever.cacheModel","AngularSmarterModels.ModelDataRetriever.cacheError","AngularSmarterModels.ModelDataRetriever.cacheList","AngularSmarterModels.ModelDataRetriever.hasListCache","AngularSmarterModels.ModelDataRetriever.shouldRetryFetch","AngularSmarterModels.ModelDataRetriever.addModelToList","AngularSmarterModels.ModelDataRetriever.removeModelFromList","AngularSmarterModels.ModelDataRetriever.get","AngularSmarterModels.ModelDataRetriever.getAsync","AngularSmarterModels.ModelDataRetriever.getMultipleAsync","AngularSmarterModels.ModelDataRetriever.list","AngularSmarterModels.ModelDataRetriever.listAsync","AngularSmarterModels.ModelDataRetriever.save","AngularSmarterModels.ModelDataRetriever.create","AngularSmarterModels.ModelDataRetriever.delete","AngularSmarterModels.ModelDataRetriever.getMultipleHelper","AngularSmarterModels.ModelBuilder","AngularSmarterModels.ModelBuilder.constructor","AngularSmarterModels.ModelBuilder.model","AngularSmarterModels.ModelBuilder.modelInstance","AngularSmarterModels.ModelBuilder.modelDataRetriever","AngularSmarterModels.ModelBuilder.listPath","AngularSmarterModels.ModelBuilder.idField","AngularSmarterModels.ModelBuilder.done","AngularSmarterModels.modelFactory"],"mappings":"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","file":"angular-smarter-models.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\"/>\n\nmodule AngularSmarterModels {\n  export var smModule: ng.IModule = angular.module('sm.models', []);\n}\n","/// <reference path=\"../typings/tsd.d.ts\"/>\n/// <reference path=\"./module.ts\"/>\n\nmodule AngularSmarterModels {\n  export interface ModelWrapper {\n    props: any,\n    config: any,\n  }\n}\n","/// <reference path=\"../typings/tsd.d.ts\"/>\n/// <reference path=\"./module.ts\"/>\n/// <reference path=\"./model-wrapper.ts\"/>\n\nmodule AngularSmarterModels {\n  export interface ModelInstanceConfig {\n    rawModel: any,\n    modelPath: string,\n    modelDataRetriever: ModelDataRetriever,\n    listPath: string,\n    idField: string,\n  }\n\n  export class ModelInstance implements ModelWrapper {\n    constructor(public config:ModelInstanceConfig) {\n      if (!angular.isObject(this.config.rawModel)) {\n        this.config.rawModel = {};\n      }\n    }\n\n    get props() {\n      return this.config.rawModel;\n    }\n\n    serialize():string {\n      return JSON.stringify(this.config.rawModel);\n    }\n\n    merge(src):void {\n      angular.extend(this.config.rawModel, src);\n    }\n\n    setModelPath(path):void {\n      this.config.modelPath = path;\n    }\n\n    getModelPath():string {\n      return this.config.modelPath;\n    }\n\n    save():ng.IPromise<void> {\n      return this.config.modelDataRetriever.save(this);\n    }\n\n    delete():ng.IPromise<void> {\n      return this.config.modelDataRetriever.delete(this.config.modelPath, this.config.listPath, this.config.idField);\n    }\n  }\n\n  smModule.value('SMModelInstance', ModelInstance);\n}\n","/// <reference path=\"./module.ts\"/>\n/// <reference path=\"./model-instance.ts\"/>\n/// <reference path=\"./model-wrapper.ts\"/>\n\nmodule AngularSmarterModels {\n  export interface ModelConfig {\n    modelDataRetriever: ModelDataRetriever,\n    modelPath: string,\n    listPath: string,\n    ModelInstance: any,\n    idField: string\n  }\n\n  export class Model {\n    constructor(private config:ModelConfig) {\n\n    }\n\n    get(params):ModelInstance {\n      return this.config.modelDataRetriever.get(this.config.modelPath, this.config.listPath, params, this.config.ModelInstance, this.config.idField);\n    }\n\n    getAsync(params):ng.IPromise<ModelInstance> {\n      return this.config.modelDataRetriever.getAsync(this.config.modelPath, this.config.listPath, params, this.config.ModelInstance, this.config.idField);\n    }\n\n    list(params):ModelWrapper[] {\n      return this.config.modelDataRetriever.list(this.config.listPath, this.config.modelPath, params, this.config.idField);\n    }\n\n    listAsync(params):ng.IPromise<ModelWrapper[]> {\n      return this.config.modelDataRetriever.listAsync(this.config.listPath, this.config.modelPath, params, this.config.idField);\n    }\n\n    getMultipleAsync(params):ng.IPromise<ModelInstance[]> {\n      let collectionPath = this.config.modelPath.split('/').slice(0, -1).join('/') + '/';\n      if (collectionPath.slice(-1) === '/') {\n        collectionPath = collectionPath.slice(0, -1);\n      }\n      return this.config.modelDataRetriever.getMultipleAsync(collectionPath, this.config.modelPath, params, this.config.ModelInstance, this.config.idField);\n    }\n\n    create(params, props):ng.IPromise<ModelInstance> {\n      const createPath = this.config.modelPath.split('/').slice(0, -1).join('/') + '/';\n      return this.config.modelDataRetriever.create(createPath, this.config.listPath, params, new this.config.ModelInstance({\n        rawModel: props,\n        modelDataRetriever: this.config.modelDataRetriever,\n        modelPath: this.config.modelPath,\n        idField: this.config.idField,\n      }));\n    }\n  }\n\n  smModule.value('SMModel', Model);\n}\n","/// <reference path=\"../typings/tsd.d.ts\"/>\n/// <reference path=\"./module.ts\"/>\n/// <reference path=\"./model-wrapper.ts\"/>\n\nmodule AngularSmarterModels {\n  export class ModelListItemInstance implements ModelWrapper {\n    constructor(private _config) {\n\n    }\n\n    get config() {\n      return this._config.config;\n    }\n\n    get props() {\n      return this._config.rawModel;\n    }\n  }\n\n  smModule.value('SMModelListItemInstance', ModelListItemInstance);\n}\n","/// <reference path=\"../typings/tsd.d.ts\"/>\n/// <reference path=\"./module.ts\"/>\n/// <reference path=\"./model-wrapper.ts\"/>\n\nmodule AngularSmarterModels {\n  export interface ModelErrorConfig {\n    error: string,\n    time: number,\n  }\n\n  export class ModelError implements ModelWrapper {\n    constructor(public config:ModelErrorConfig) {\n\n    }\n\n    get props() {\n      return undefined;\n    }\n\n    get error():string {\n      return this.config.error;\n    }\n\n    get time():number {\n      return this.config.time;\n    }\n  }\n}\n","/// <reference path=\"./module.ts\"/>\n/// <reference path=\"./model-instance.ts\"/>\n/// <reference path=\"./model.ts\"/>\n/// <reference path=\"./model-list-item-instance.ts\"/>\n/// <reference path=\"./model-error.ts\"/>\n\nmodule AngularSmarterModels {\n  export class ModelDataRetrieverError extends Error {\n    constructor(public message:string) {\n      super(message);\n      this.name = 'ModelDataRetrieverError';\n    }\n  }\n\n  class UrlCache {\n    private cache: Object = {};\n\n    has(key:string):boolean {\n      return this.cache.hasOwnProperty(this.stripTrailingSlash(key));\n    }\n\n    get(key:string) {\n      return this.cache[this.stripTrailingSlash(key)];\n    }\n\n    set(key:string, value:any) {\n      this.cache[this.stripTrailingSlash(key)] = value;\n    }\n\n    private stripTrailingSlash(key:string):string {\n      if (key.slice(-1) === '/') {\n        return key.slice(0, -1);\n      } else {\n        return key;\n      }\n    }\n  }\n\n  var retryInterval = 10000;\n\n  function buildUrl(path, params) {\n    return path.split('/').map(function(pathComponent) {\n      if (pathComponent[0] === ':') {\n        const subValue = params[pathComponent.slice(1)];\n        if (subValue !== null && subValue !== undefined) {\n          return subValue;\n        }\n        throw new ModelDataRetrieverError(`Missing required param \"${pathComponent.slice(1)}\" for path \"${path}\"!`);\n      }\n      return pathComponent;\n    }).join('/');\n  }\n\n  export class ModelDataRetriever {\n    static $inject: string[] = ['$q', '$http'];\n\n    // TODO: use a weak map for this cache? then we'd cache as long as something in the app/scope\n    // was using the model, but then let it be cleared once garbage collection runs\n    private modelCache: Object;\n    private outstandingRequests: Object;\n    private listCache: UrlCache;\n\n    constructor(private $q: ng.IQService, private $http: ng.IHttpService) {\n      this.modelCache = {};\n      this.outstandingRequests = {};\n      this.listCache = new UrlCache();\n    }\n\n    private cacheModel(modelUrl: string, listUrl: string, ModelInstance, modelData, identifyingField:string): ModelInstance {\n      const self = this;\n      const modelInstance = new ModelInstance({\n        rawModel: modelData,\n        modelDataRetriever: self,\n        modelPath: modelUrl,\n        listPath: listUrl,\n        idField: identifyingField,\n      });\n      this.modelCache[modelUrl] = modelInstance;\n      this.addModelToList(listUrl, modelInstance, 0);\n      return modelInstance;\n    }\n\n    private cacheError(modelUrl: string, listUrl: string, identifyingField: string): ModelError {\n      const errorInstance = new ModelError({\n        error: 'An error occurred fetching the model!',\n        time: Date.now(),\n      });\n      this.modelCache[modelUrl] = errorInstance;\n      return errorInstance;\n    }\n\n    private cacheList(modelUrl: string, modelData): ModelWrapper[] {\n      this.listCache.set(modelUrl, modelData);\n      return modelData;\n    }\n\n    private hasListCache(modelUrl: string): boolean {\n      const cacheItem = this.listCache.get(modelUrl);\n      return this.listCache.has(modelUrl) && cacheItem !== null;\n    }\n\n    private shouldRetryFetch(modelError: ModelError) {\n      return Date.now() - modelError.time > retryInterval;\n    }\n\n    private addModelToList(modelUrl: string, model:ModelWrapper, position:number = 0) {\n      if (this.hasListCache(modelUrl)) {\n        const modelList = this.listCache.get(modelUrl);\n        for (let i = 0; i < modelList.length; i++) {\n          if (modelList[i].props[model.config.idField] === model.props[model.config.idField]) {\n            modelList[i] = model;\n            return;\n          }\n        }\n        this.listCache.get(modelUrl).splice(position, 0, model);\n      }\n    }\n\n    private removeModelFromList(modelUrl: string, modelId: string, identifyingField: string) {\n      const modelList = this.listCache.get(modelUrl);\n      for (let i = 0; i < modelList.length; i++) {\n        if (modelList[i].props[identifyingField] === modelId) {\n          modelList.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    get(modelPath:string, listPath:string, params, ModelInstance, identifyingField:string):ModelInstance {\n      const modelUrl = buildUrl(modelPath, params);\n      const cachedValue = this.modelCache[modelUrl];\n      const valueInCache = this.modelCache.hasOwnProperty(modelUrl);\n\n      if ( !valueInCache || (cachedValue instanceof ModelError && this.shouldRetryFetch(cachedValue))) {\n        this.getAsync(modelPath, listPath, params, ModelInstance, identifyingField);\n      }\n\n      if (valueInCache) {\n        return cachedValue;\n      }\n    }\n\n    getAsync(modelPath:string, listPath:string, params, ModelInstance, identifyingField:string):ng.IPromise<ModelInstance> {\n      const modelUrl = buildUrl(modelPath, params);\n      let modelPromise;\n      const cachedValue = this.modelCache[modelUrl];\n\n      if (this.modelCache.hasOwnProperty(modelUrl) && !(cachedValue instanceof ModelError)) {\n        modelPromise = this.$q.when(cachedValue);\n      } else if (this.outstandingRequests.hasOwnProperty(modelUrl)) {\n        modelPromise = this.outstandingRequests[modelUrl];\n      } else {\n        modelPromise = this.$http.get(modelUrl)\n        .then(response => {\n          return this.cacheModel(modelUrl, listPath, ModelInstance, response.data, identifyingField);\n        })\n        .catch(response => {\n          return this.$q.reject(this.cacheError(modelUrl, listPath, identifyingField));\n        })\n        .finally(() => {\n          delete this.outstandingRequests[modelUrl];\n        });\n        this.outstandingRequests[modelUrl] = modelPromise;\n      }\n      return modelPromise;\n    }\n\n    getMultipleAsync(collectionPath:string, modelPath:string, params, ModelInstance, identifyingField:string):ng.IPromise<ModelInstance[]> {\n      return this.getMultipleHelper<ModelInstance>(collectionPath, modelPath, params, ModelInstance, identifyingField, false);\n    }\n\n    list(listPath:string, modelPath: string, params, identifyingField:string): ModelWrapper[] {\n      const modelUrl = buildUrl(listPath, params);\n      if (this.hasListCache(modelUrl)) {\n        return this.listCache.get(modelUrl);\n      }\n\n      if (this.listCache.get(modelUrl) !== null) {\n        this.listAsync(listPath, modelPath, params, identifyingField);\n      }\n    }\n\n    listAsync(listPath:string, modelPath:string, params, identifyingField:string):ng.IPromise<ModelWrapper[]> {\n      return this.getMultipleHelper<ModelWrapper>(listPath, modelPath, params, null, identifyingField, true);\n    }\n\n    save(model:ModelInstance):ng.IPromise<void> {\n      return this.$http.post<void>(model.getModelPath(), model.serialize()).then(response => {\n          // do nothing, do this to return a standard angular promise instead of an $http one\n      });\n    }\n\n    create(modelPath:string, listPath:string, params, model:ModelInstance):ng.IPromise<ModelInstance> {\n      const modelUrl = buildUrl(modelPath, params);\n      return this.$http.put(modelUrl, model.serialize()).then(response => {\n        model.merge(response.data);\n        model.setModelPath(response.headers('Location'));\n        this.modelCache[response.headers('Location')] = model;\n        this.addModelToList(listPath, model);\n        return model;\n      });\n    }\n\n    delete(modelPath:string, listPath:string, identifyingField:string):ng.IPromise<void> {\n      let modelId;\n      if (this.modelCache.hasOwnProperty(modelPath)) {\n        modelId = this.modelCache[modelPath].props[identifyingField];\n      }\n      delete this.modelCache[modelPath];\n      return this.$http.delete(modelPath).then(response => {\n        if (modelId != null) {\n          this.removeModelFromList(listPath, modelId, identifyingField);\n        }\n      });\n    }\n\n    private getMultipleHelper<T>(collectionPath: string, modelPath: string, params, ModelInstance, identifyingField: string, isList: boolean): ng.IPromise<T[]> {\n      const modelUrl = buildUrl(collectionPath, params);\n      let modelPromise;\n      if (this.hasListCache(modelUrl)) {\n        modelPromise = this.$q.when(this.listCache.get(modelUrl));\n      } else if (this.outstandingRequests.hasOwnProperty(modelUrl)) {\n        modelPromise = this.outstandingRequests[modelUrl];\n      } else {\n        modelPromise = this.$http.get<T[]>(modelUrl).then(response => {\n          if (!angular.isArray(response.data)) {\n            return this.$q.reject(new ModelDataRetrieverError(`Expected array of models for list request for path \"${modelUrl}\"!`));\n          }\n          const modelList = response.data.map(listItem => {\n            const actualModelParams = {\n              [identifyingField]: listItem[identifyingField]\n            }\n            angular.extend(actualModelParams, params);\n            const actualModelUrl = buildUrl(modelPath, actualModelParams);\n            if (this.modelCache.hasOwnProperty(actualModelUrl)) {\n              return this.modelCache[actualModelUrl];\n            } else if (!isList) {\n              return this.cacheModel(actualModelUrl, collectionPath, ModelInstance, listItem, identifyingField);\n            } else {\n              return new ModelListItemInstance({\n                rawModel: listItem,\n                config: {\n                  idField: identifyingField,\n                },\n              });\n            }\n          });\n          return this.cacheList(modelUrl, modelList);\n        })\n        .catch(response => {\n          this.listCache.set(modelUrl, null);\n          return this.$q.reject(response);\n        })\n        .finally(() => {\n          delete this.outstandingRequests[modelUrl];\n        });\n        this.outstandingRequests[modelUrl] = modelPromise;\n      }\n      return modelPromise;\n    }\n  }\n\n  interface ISMModelDataRetrieverProvider extends ng.IServiceProvider {\n    setRetryInterval(number)\n  }\n\n  var serviceProvider:ISMModelDataRetrieverProvider = {\n    setRetryInterval: function(interval) {\n      retryInterval = interval;\n    },\n\n    $get: ['$injector', function($injector) {\n      return $injector.instantiate(ModelDataRetriever);\n    }]\n  };\n\n  smModule\n    .value('smModelDataRetrieverError', ModelDataRetrieverError)\n    .provider('smModelDataRetriever', serviceProvider);\n}\n","/// <reference path=\"./module.ts\"/>\n/// <reference path=\"./model-instance.ts\"/>\n/// <reference path=\"./model.ts\"/>\n/// <reference path=\"./model-data-retriever.ts\"/>\n\nmodule AngularSmarterModels {\n\n  export class ModelBuilder {\n    constructor(private route:string, private _listPath:string, private Model, private ModelInstance, private _modelDataRetriever:ModelDataRetriever, private _idField:string) {\n\n    }\n\n    model(Model):ModelBuilder {\n      this.Model = Model;\n      return this;\n    }\n\n    modelInstance(ModelInstance):ModelBuilder {\n      this.ModelInstance = ModelInstance;\n      return this;\n    }\n\n    modelDataRetriever(modelDataRetriever):ModelBuilder {\n      this._modelDataRetriever = modelDataRetriever;\n      return this;\n    }\n\n    listPath(listPath):ModelBuilder {\n      this._listPath = listPath;\n      return this;\n    }\n\n    idField(fieldName):ModelBuilder {\n      this._idField = fieldName;\n      return this;\n    }\n\n    done():Model {\n      return new this.Model({\n        modelPath: this.route,\n        ModelInstance: this.ModelInstance,\n        modelDataRetriever: this._modelDataRetriever,\n        listPath: this._listPath,\n        idField: this._idField,\n      });\n    }\n  }\n\n  export interface modelBuilder {\n    (route: string, listPath:string): ModelBuilder;\n  }\n\n  function modelFactory(SMModel, SMModelInstance, smModelDataRetriever):modelBuilder {\n    var service:modelBuilder = function(route:string, listPath:string):ModelBuilder {\n      return new ModelBuilder(route, listPath, SMModel, SMModelInstance, smModelDataRetriever, 'id');\n    };\n    return service;\n  }\n\n  modelFactory.$inject = ['SMModel', 'SMModelInstance', 'smModelDataRetriever'];\n\n  angular.module('sm.models').factory('smModelFactory', modelFactory);\n}\n"],"sourceRoot":"/source/"}